Description: Fix ovs-monitor-ipsec
 Open subprocesses in the text mode.
 Use valid strongSwan configuration.
 Use python3 dictionary iterators.
Forwarded: no
Author: Jakub Safarik <jsfrk@protonmail.com>
Last-Update: 2019-09-29
--- a/ipsec/ovs-monitor-ipsec.in
+++ b/ipsec/ovs-monitor-ipsec.in
@@ -99,7 +99,8 @@
         the IPsec policy."""
         policies = {}
         proc = subprocess.Popen([self.IP, 'xfrm', 'policy'],
-                                stdout=subprocess.PIPE)
+                                stdout=subprocess.PIPE,
+                                universal_newlines=True)
         while True:
             line = proc.stdout.readline().strip()
             if line == '':
@@ -122,7 +123,8 @@
         is SELECTOR."""
         securities = {}
         proc = subprocess.Popen([self.IP, 'xfrm', 'state'],
-                                stdout=subprocess.PIPE)
+                                stdout=subprocess.PIPE,
+                                universal_newlines=True)
         while True:
             line = proc.stdout.readline().strip()
             if line == '':
@@ -145,10 +147,18 @@
     """This class does StrongSwan specific configurations."""
 
     STRONGSWAN_CONF = """%s
-charon.plugins.kernel-netlink.set_proto_port_transport_sa = yes
-charon.plugins.kernel-netlink.xfrm_ack_expires = 10
-charon.load_modular = yes
-charon.plugins.gcm.load = yes
+charon {
+    plugins {
+        kernel-netlink {
+            set_proto_port_transport_sa = yes
+            xfrm_ack_expires = 10
+        }
+        gcm {
+            load = yes
+        }
+    }
+    load_modular = yes
+}
 """ % (FILE_HEADER)
 
     CONF_HEADER = """%s
@@ -243,7 +253,9 @@
         sample line from the parsed outpus as <value>. """
 
         conns = {}
-        proc = subprocess.Popen([self.IPSEC, 'status'], stdout=subprocess.PIPE)
+        proc = subprocess.Popen([self.IPSEC, 'status'],
+                                stdout=subprocess.PIPE,
+                                universal_newlines=True)
 
         while True:
             line = proc.stdout.readline().strip()
@@ -340,7 +352,7 @@
         # about possibility of ovs-monitor-ipsec to block for each tunnel
         # while strongSwan sends IKE messages over Internet.
         conns_dict = self.get_active_conns()
-        for ifname, conns in conns_dict.iteritems():
+        for ifname, conns in conns_dict.items():
             tunnel = monitor.tunnels.get(ifname)
             for conn in conns:
                 # IPsec "connection" names that we choose in strongswan
@@ -536,7 +548,7 @@
 
         # Delete old connections
         conns_dict = self.get_active_conns()
-        for ifname, conns in conns_dict.iteritems():
+        for ifname, conns in conns_dict.items():
             tunnel = monitor.tunnels.get(ifname)
 
             for conn in conns:
@@ -989,7 +1001,7 @@
         skb_mark = None
         is_valid = False
 
-        for row in data["Open_vSwitch"].rows.itervalues():
+        for row in data["Open_vSwitch"].rows.values():
             pki[0] = row.other_config.get("certificate")
             pki[1] = row.other_config.get("private_key")
             pki[2] = row.other_config.get("ca_cert")
@@ -1016,7 +1028,7 @@
         table."""
         ifaces = set()
 
-        for row in data["Interface"].rows.itervalues():
+        for row in data["Interface"].rows.values():
             if not self.is_tunneling_type_supported(row.type):
                 continue
             if not self.is_ipsec_required(row.options):
@@ -1047,7 +1059,7 @@
             return
         s = ""
         conns = self.ike_helper.get_active_conns()
-        for name, tunnel in self.tunnels.iteritems():
+        for name, tunnel in self.tunnels.items():
             s += tunnel.show(policies, securities, conns)
         unix_conn.reply(s)
 
@@ -1064,7 +1076,7 @@
         if self.ike_helper.config_global(self):
             needs_refresh = True
 
-        for name, tunnel in self.tunnels.iteritems():
+        for name, tunnel in self.tunnels.items():
             if tunnel.last_refreshed_version != tunnel.version:
                 tunnel.last_refreshed_version = tunnel.version
                 needs_refresh = True
